Metadata-Version: 2.1
Name: coco-assistant
Version: 1.0.0
Summary: Helper for dealing with MS-COCO annotations
Home-page: https://github.com/ashnair1/COCO-Assistant
Author: Ashwin Nair
Author-email: ash1995@gmail.com
License: MIT
Description: 
        # COCO-Assistant<img src="rep_stuff/coco.png" height="40">
        
        Helper for dealing with MS-COCO annotations. 
        
        ## Overview
        The MS COCO annotation format along with the pycocotools library is quite popular among the computer vision community. Yet I for one found it difficult to play around with the annotations. Deleting a specific category, combining multiple mini datasets to generate a larger dataset, viewing distribution of classes in the annotation file are things I would like to do without writing a separate script for each. The COCO Assistant is designed (or being designed) to assist with this exact problem.
        
        ### Requirements
        Your data directory should look as follows:
        
        ```
        Example:
        .
        ├── images
        │   ├── train
        │   ├── val
        |   ├── test
        |   
        ├── annotations
        │   ├── train.json
        │   ├── val.json
        │   ├── test.json
        |── coco_assistant.py
        |── coco_stats.py
        |── coco_visualiser.py
        
        ``` 
        
        ## Installation
        
        ```
        # Clone the repository
        git clone https://github.com/ashnair1/COCO-Assistant.git
        # Build and install the library
        make
        ```
        
        ## So what can CASS do?:
        
        #### Merge datasets
        
        The `combine` function allows you to merge  multiple datasets. Note however, that the individiual annotations needs to have different annotation ids so that they can be seamlessly merged. In the future, functionality will be added to check annotation ids automatically.
        
        #### Remove_cat
        
        Removes a specific category from an annotation file.
        
        #### Generate annotation statistics
        
        1. Generate countplot of instances per category that occur in the annotation files.
        2. Generate pie-chart that shows distribution of objects according to their size (as specified in areaRng).
        
        #### Visualise annotations
        
        Couldn't `pycocotools` visualise annotations (via [showAnns](https://github.com/cocodataset/cocoapi/blob/636becdc73d54283b3aac6d4ec363cffbb6f9b20/PythonAPI/pycocotools/coco.py#L233)) as well? Sure it could, but I required a way to freely view all the annotations of a particular dataset so here we are.
        
        ![](./rep_stuff/visualiser.gif)
        
        ### In Progress: 
        #### COCO to YOLO Converter
        
        Converts COCO annotations to YOLO format (modified version of ultralytics's [original repo](https://github.com/ultralytics/COCO2YOLO))
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
